plugins {
    id 'org.ajoberstar.grgit' version '4.0.2'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'me.champeau.gradle.jmh' version '0.5.0-rc-1'
}

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

group 'net.minecraftforge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = grgit.describe(longDescr: true).split('-').with { "${it[0]}.${it[1]}" }

jacoco {
    toolVersion = '0.8.2'
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

test {
    useJUnitPlatform()
    forkEvery 1
}

sourceSets {
    testJars
}

ext.sharedManifest = manifest {
    attributes(['Specification-Title': 'eventbus',
                'Specification-Vendor': 'Forge',
                'Specification-Version': '1', // Currently version 1 of the eventbus specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv('BUILD_NUMBER')?:0}+${grgit.branch.current().getName()}.${grgit.head().abbreviatedId}",
                'Implementation-Vendor' :'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': grgit.head().abbreviatedId,
                'Git-Branch': grgit.branch.current().getName(),
                'Build-Number': "${System.getenv('BUILD_NUMBER')?:0}" ],
            'net/minecraftforge/eventbus/service/')
}

jar {
    manifest = project.manifest {
        from sharedManifest
    }
}

task testsJar(type: Jar) {
    archiveClassifier = 'testsjar'
    from sourceSets.testJars.output
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}


repositories {
    mavenCentral()
    maven {
        name = 'forge'
        url = 'http://files.minecraftforge.net/maven'
    }
}

configurations.jmh {
    resolutionStrategy {
        force ("net.sf.jopt-simple:jopt-simple:5.0.4")
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.+')
    testImplementation('org.powermock:powermock-core:2.0.+')
    testImplementation('cpw.mods:modlauncher:6.1.+')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.6.+')
    testImplementation('org.apache.logging.log4j:log4j-core:2.11.+')
    testImplementation('com.lmax:disruptor:3.4.2')
    testImplementation(sourceSets.testJars.runtimeClasspath)
    testJarsImplementation(sourceSets.main.output)
    implementation('org.ow2.asm:asm:7.2')
    implementation('org.ow2.asm:asm-commons:7.2')
    implementation('org.ow2.asm:asm-tree:7.2')
    implementation('org.apache.logging.log4j:log4j-api:2.11.+')
    implementation('cpw.mods:modlauncher:6.1.+:api')
    implementation('com.google.code.findbugs:jsr305:3.0.2')
    api('net.jodah:typetools:0.8.+')
    jmhImplementation('cpw.mods:modlauncher:6.1.+')
    jmhImplementation("org.powermock:powermock-core:2.0.+")
    jmhImplementation("org.ow2.asm:asm:7.2")
    jmhImplementation("org.ow2.asm:asm-tree:7.2")
    jmhImplementation("org.ow2.asm:asm-commons:7.2")
    jmh("org.ow2.asm:asm:7.2")
}

jmh {
    jvmArgs = ['-Djmh.separateClasspathJAR=true']
    include = [ 'net.minecraftforge.eventbus.benchmarks.EventBusBenchmark' ]
    benchmarkMode = ['avgt' ]
    profilers = [ 'stack' ]
    timeOnIteration = '5s'
    warmup = '5s'
    warmupIterations = 3
    iterations = 3
    fork = 3
    timeUnit = 'ns'
}

tasks['jmh'].dependsOn(clean)

artifacts {
    archives jar
    archives sourcesJar
    archives testsJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            pom {
                name = 'Event Bus'
                description = 'High performance Event Bus library'
                url = 'https://github.com/MinecraftForge/eventbus'
                scm {
                    url = 'https://github.com/MinecraftForge/eventbus'
                    connection = 'scm:git:git://github.com/MinecraftForge/eventbus.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/eventbus.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/eventbus/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                    developer {
                        id = 'LexManos'
                        name = 'LexManos'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.properties.forgeMavenUser?:'fake'
                password project.properties.forgeMavenPassword?:'news'
            }
            url 'http://files.minecraftforge.net/maven/manage/upload'
        }
    }
}